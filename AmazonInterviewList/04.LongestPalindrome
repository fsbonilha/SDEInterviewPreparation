# Source: https://leetcode.com/problems/longest-palindromic-substring/

# Problem: Longest Palindromic Substring 

# Brute Force Solution
class Solution:
    def longestPalindrome(self, s: str) -> str:
        index = 0
        start = 0
        longest = 0
        longest_start = 0
        longest_end = 0
        for start in range( , len(s)):
            for end in range(start, len(s)):
                word = s[start:end + 1]
                if self.isPalindrome(word) and len(word) > longest:
                    longest = len(word)
                    longest_start = start
                    longest_end = end + 1
        return s[longest_start:longest_end]

                
    def isPalindrome(self, s: str) -> bool:
        if s == s[::-1]:
            return True
        return False